▶题目：

     给定一个仅包含数字 2-9 的字符串，返回所有它能表示的字母组合。
     给出数字到字母的映射如下（与电话按键相同）。注意 1 不对应任何字母。

▶示例:

     输入："23"
     输出：["ad", "ae", "af", "bd", "be", "bf", "cd", "ce", "cf"].
     
▶代码：

class Solution {
public:
    vector<string> letterCombinations(string digits) {
        vector<string> res;
        if (digits.empty()) {
            return res;
        }
        unordered_map<char, string> phoneMap{
            {'2', "abc"},
            {'3', "def"},
            {'4', "ghi"},
            {'5', "jkl"},
            {'6', "mno"},
            {'7', "pqrs"},
            {'8', "tuv"},
            {'9', "wxyz"}
        };
        string result;
        backtrack(res, phoneMap, digits, 0, result);
        return res;
    }

    void backtrack(vector<string>& res, const unordered_map<char, string>& phoneMap, const string& digits, int index, string& result) {
        if (index == digits.length()) {
            res.push_back(result);
        } else {
            char digit = digits[index];
            const string& letters = phoneMap.at(digit);
            for (const char& letter: letters) {
                result.push_back(letter);
                backtrack(res, phoneMap, digits, index + 1, result);
                result.pop_back();
            }
        }
    }
};
