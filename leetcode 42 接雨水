▶题目：
        给定 n 个非负整数表示每个宽度为 1 的柱子的高度图，计算按此排列的柱子，下雨之后能接多少雨水。

示例 1：

输入：height = [0,1,0,2,1,0,1,3,2,1,2,1]
输出：6
解释：上面是由数组 [0,1,0,2,1,0,1,3,2,1,2,1] 表示的高度图，在这种情况下，可以接 6 个单位的雨水（蓝色部分表示雨水）。 

示例 2：
输入：height = [4,2,0,3,2,5]
输出：9

▶代码：

暴力法：
class Solution {
public:
    int trap(vector<int>& height) {
        int n=height.size();
        int ans=0;
        for(int i=1;i<n-1;i++){
            int leftmax,rightmax=0;
            for(int j=i;j>=0;j--){
                leftmax=max(leftmax,height[j]);
            }
            for(int j=i;j<n;j++){
                rightmax=max(rightmax,height[j]);
            }
            ans+=min(leftmax,rightmax)-height[i];
        }
        return ans;
    }
};

双指针：
class Solution{
public:
    int trap(vector<int>& height)
    {
        int left = 0, right = height.size() - 1;
        int ans = 0;
        int left_max = 0, right_max = 0;
        while (left < right) {
            if (height[left] < height[right]) {
               if(height[left] >= left_max){
                   left_max = height[left];
               }else{
                   ans += (left_max - height[left]);
               }
            ++left;
        }
            else {
                if(height[right] >= right_max){
                    right_max = height[right];
                } else{
                    ans += (right_max - height[right]);
                } 
            --right;
        }
    }
    return ans;
    }
};

